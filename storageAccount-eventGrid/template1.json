{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storagePrefix": {
            "type": "string",
            "metadata": {
                "description": "storage name of blobs"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "location of resource group"
            }
        },
        "eventGridTopicName": {
            "type": "string",
            "defaultValue": "[format('topic-{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the Event Grid custom topic."
            }
        },
        "eventGridSubscriptionName": {
            "type": "string",
            "defaultValue": "[format('sub-{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the Event Grid custom topic's subscription."
            }
        },
        "appName": {
            "type": "string",
            "defaultValue": "[concat('fnapp', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the function app that you wish to create."
            }
        },
        "runtime": {
            "type": "string",
            "defaultValue": "python",
            "metadata": {
                "description": "The language worker runtime to load in the function app."
            }
        }
    },
    "variables": {
        "uniqueStorageName": "[concat(parameters('storagePrefix'), uniqueString(resourceGroup().id))]",
        "storageAccountApiVersion": "2021-04-01",
        "storageAccountNameTidy": "[toLower(trim(variables('uniqueStorageName')))]",
        "queueName": "queue-event-blob",
        "functionAppName": "[parameters('appName')]",
        "hostingPlanName": "[parameters('appName')]",
        "applicationInsightsName": "[parameters('appName')]",
        "functionWorkerRuntime": "[parameters('runtime')]",
        "repoUrl": "https://github.com/AbdelrahmanElayashy/counting-blobs-parallel-by-azurefunc.git",
        "branch": "master"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageAccountApiVersion')]",
            "name": "[variables('uniqueStorageName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('uniqueStorageName'), format('/default/{0}', variables('queueName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageName'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('uniqueStorageName'), concat('/default/', concat(variables('queueName'), '-poison')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageName'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics",
            "apiVersion": "2020-04-01-preview",
            "name": "[parameters('eventGridTopicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[ variables('uniqueStorageName')]"
            ],
            "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageName'))]",
                "topicType": "Microsoft.Storage.StorageAccounts"
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "name": "[concat(parameters('eventGridTopicName'), format('/{0}', parameters('eventGridSubscriptionName')) )]",
            "apiVersion": "2020-10-15-preview",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', parameters('eventGridTopicName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageName'))]"
            ],
            "properties": {
                "topic": "[resourceId('Microsoft.EventGrid/systemTopics',parameters('eventGridTopicName'))]",
                "destination": {
                    "endpointType": "storagequeue",
                    "properties": {
                        "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageName'))]",
                        "queueName": "[variables('queueName')]",
                        "queueMessageTimeToLiveInSeconds": 604800
                    }
                },
                "filter": {
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated",
                        "Microsoft.Storage.DirectoryCreated"
                    ],
                    "advancedFilters": [],
                    "enableAdvancedFilteringOnArrays": true
                },
                "labels": [],
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 30,
                    "eventTimeToLiveInMinutes": 1440
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "kind": "linux",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "computeMode": "Dynamic",
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[variables('functionAppName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp,linux",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "linuxFxVersion": "PYTHON|3.9",
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 1,
                    "minimumElasticInstanceCount": 1,
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('uniqueStorageName'),  ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameTidy')), variables('storageAccountApiVersion')).keys[0].value , ';EndpointSuffix=', environment().suffixes.storage)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('uniqueStorageName'),  ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameTidy')), variables('storageAccountApiVersion')).keys[0].value , ';EndpointSuffix=', environment().suffixes.storage)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "~10"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "[variables('functionWorkerRuntime')]"
                        },
                        {
                            "name": "[concat(variables('uniqueStorageName'), '__STORAGE')]",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('uniqueStorageName'),  ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameTidy')), variables('storageAccountApiVersion')).keys[0].value , ';EndpointSuffix=', environment().suffixes.storage)]"

                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2020-12-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoUrl')]",
                        "branch": "[variables('branch')]",
                        "IsManualIntegration": true
                    }
                }
            ]
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('applicationInsightsName')]",
            "location": "[parameters('location')]",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
            },
            "properties": {
                "ApplicationId": "[variables('applicationInsightsName')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        }

    ],
    "outputs": {

        "storageAccountConnectionString": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountNameTidy'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameTidy')), variables('storageAccountApiVersion')).keys[0].value)]"
        }
    }
}
